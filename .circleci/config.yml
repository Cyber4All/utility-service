defaults: &defaults
  working_directory: ~/utility-service
  docker:
    - image: cyber4all/circleci-aws:node-alpine

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Imgae
          command: |
            docker build -t $DOCKER_USER_ORG/utility-service:$CIRCLE_SHA1
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      - run:
          name: Publish Image
          command: |
            docker push "${DOCKER_USER_ORG}/utility-service:${CIRCLE_SHA1}"
  test:
    <<: *defaults
    steps: 
      - setup_remote_docker
      - run: 
          name: Get Image
          command: docker pull $DOCKER_USER_ORG/utility-service:$CIRCLE_SHA1
      - run: 
          name: Run Tests
          command: docker run $DOCKER_USER_ORG/utility-service:$CIRCLE_SHA1 npm test






  deploy:
    <<: *defaults
    steps:
      - attach_workspace : 
          at: ~/utility-service
      - run:
          name: Setup AWS credentials
          command: |
            mkdir ~/.aws && printf "[profile default]\naws_access_key_id = ${AWS_ACCESS_KEY_ID}\naws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" > ~/.aws/config
      - run: 
          name: Copy package.json
          command: cp ./package.json ./dist
      - run: 
          name: Zip dist
          command: cd ./dist; zip -r ../dist.zip . *; cd ..
      - run:
          name: Deploy to Elastic Beanstalk 
          command: eb deploy Gateway-API --verbose --label Gateway-API-v$(node -p "require('./package.json').version")
workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: /master/
      - test:
          filters:
            branches:
              ignore: /master/
              
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: /master/